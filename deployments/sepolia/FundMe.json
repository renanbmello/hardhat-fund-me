{
  "address": "0x9A5c7020366eE59E6B956828644c9Eb5FA80E562",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x12aaa8d816f57de0e70f7748dac7019e6703f0ff82c867afa566c4908a0f3afb",
  "receipt": {
    "to": null,
    "from": "0xD6f1De6cC54aA54D3433347295a18BE4E46883b7",
    "contractAddress": "0x9A5c7020366eE59E6B956828644c9Eb5FA80E562",
    "transactionIndex": 24,
    "gasUsed": "872296",
    "logsBloom": "0x
    "blockHash": "0xf4828f8e4741cb30336553ae5395d71e7a2dbc15125867e8efe008b13c4fcd14",
    "transactionHash": "0x12aaa8d816f57de0e70f7748dac7019e6703f0ff82c867afa566c4908a0f3afb",
    "logs": [],
    "blockNumber": 4369850,
    "cumulativeGasUsed": "2704534",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "80d95911e02c75d04692ecfb07e1e176",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Renan Mello\",\"details\":\"This implements pricefeeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"this implements price feeds as our \"}},\"title\":\"A contract for crowdfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"this function funds the contract \"}},\"notice\":\"This contract is to demo a semple contract \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowdfunding\\n * @author Renan Mello\\n * @notice This contract is to demo a semple contract \\n * @dev This implements pricefeeds as our library\\n */\\n\\ncontract FundMe {\\n    //Type declarations \\n    using PriceConverter for uint256;\\n    //State Variables \\n\\n    mapping(address => uint256) public addressToAmountFunded; \\n    address[] public funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n/**\\n * @notice this function funds the contract \\n * @dev this implements price feeds as our \\n */\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n}\",\"keccak256\":\"0xd6c8228c8c3869285f0f85a524d67f2668c20822e77639dcc97fbbf64a33e875\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xfd2cfd63e8ffd5b71bedf9021381e58fc19065c3d5ded28242d615fbadd6372f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f53380380610f538339818101604052810190610032919061011d565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610dfa806101596000396000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630ec3b027146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610828565b60405180910390f35b3480156100cf57600080fd5b506100d861033f565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610886565b610581565b60405161010e91906108cc565b60405180910390f35b34801561012357600080fd5b5061012c610599565b60405161013991906108cc565b60405180910390f35b34801561014e57600080fd5b506101576105a6565b6040516101649190610828565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c6105d0565b60405161019991906108f6565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c4919061093d565b6105f6565b6040516101d691906108f6565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063590919063ffffffff16565b101561025f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610256906109c7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a16565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610471576000600182815481106103ec576103eb610a4a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046990610a79565b9150506103c9565b50600067ffffffffffffffff81111561048d5761048c610ac1565b5b6040519080825280602002602001820160405280156104bb5781602001602082028036833780820191505090505b50600190805190602001906104d1929190610702565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f890610b21565b60006040518083038185875af1925050503d8060008114610535576040519150601f19603f3d011682016040523d82523d6000602084013e61053a565b606091505b505090508061057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590610b82565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061060657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061064183610671565b90506000670de0b6b3a7640000858361065a9190610ba2565b6106649190610c13565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e39190610cd1565b5050509150506402540be400816106fa9190610d4c565b915050919050565b82805482825590600052602060002090810192821561077b579160200282015b8281111561077a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610722565b5b509050610788919061078c565b5090565b5b808211156107a557600081600090555060010161078d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107ee6107e96107e4846107a9565b6107c9565b6107a9565b9050919050565b6000610800826107d3565b9050919050565b6000610812826107f5565b9050919050565b61082281610807565b82525050565b600060208201905061083d6000830184610819565b92915050565b600080fd5b6000610853826107a9565b9050919050565b61086381610848565b811461086e57600080fd5b50565b6000813590506108808161085a565b92915050565b60006020828403121561089c5761089b610843565b5b60006108aa84828501610871565b91505092915050565b6000819050919050565b6108c6816108b3565b82525050565b60006020820190506108e160008301846108bd565b92915050565b6108f081610848565b82525050565b600060208201905061090b60008301846108e7565b92915050565b61091a816108b3565b811461092557600080fd5b50565b60008135905061093781610911565b92915050565b60006020828403121561095357610952610843565b5b600061096184828501610928565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109b1601b8361096a565b91506109bc8261097b565b602082019050919050565b600060208201905081810360008301526109e0816109a4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a21826108b3565b9150610a2c836108b3565b9250828201905080821115610a4457610a436109e7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a84826108b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ab657610ab56109e7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b0b600083610af0565b9150610b1682610afb565b600082019050919050565b6000610b2c82610afe565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b6c600b8361096a565b9150610b7782610b36565b602082019050919050565b60006020820190508181036000830152610b9b81610b5f565b9050919050565b6000610bad826108b3565b9150610bb8836108b3565b9250828202610bc6816108b3565b91508282048414831517610bdd57610bdc6109e7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1e826108b3565b9150610c29836108b3565b925082610c3957610c38610be4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6381610c44565b8114610c6e57600080fd5b50565b600081519050610c8081610c5a565b92915050565b6000819050919050565b610c9981610c86565b8114610ca457600080fd5b50565b600081519050610cb681610c90565b92915050565b600081519050610ccb81610911565b92915050565b600080600080600060a08688031215610ced57610cec610843565b5b6000610cfb88828901610c71565b9550506020610d0c88828901610ca7565b9450506040610d1d88828901610cbc565b9350506060610d2e88828901610cbc565b9250506080610d3f88828901610c71565b9150509295509295909350565b6000610d5782610c86565b9150610d6283610c86565b9250828202610d7081610c86565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610da857610da76109e7565b5b8282058414831517610dbd57610dbc6109e7565b5b509291505056fea2646970667358221220b09ddc4fc59339da94dc5e9dccf56fe5db2b78dff3d3c7fe78135caf1257675264736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063dba6335f14610177578063dc0d3dff146101a25761008e565b80630ec3b027146100985780633ccfd60b146100c35780633e47d6f3146100da5780636b69a592146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610319565b6040516100ba9190610828565b60405180910390f35b3480156100cf57600080fd5b506100d861033f565b005b3480156100e657600080fd5b5061010160048036038101906100fc9190610886565b610581565b60405161010e91906108cc565b60405180910390f35b34801561012357600080fd5b5061012c610599565b60405161013991906108cc565b60405180910390f35b34801561014e57600080fd5b506101576105a6565b6040516101649190610828565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061018c6105d0565b60405161019991906108f6565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c4919061093d565b6105f6565b6040516101d691906108f6565b60405180910390f35b6802b5e3af16b188000061021e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063590919063ffffffff16565b101561025f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610256906109c7565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ad9190610a16565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610471576000600182815481106103ec576103eb610a4a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046990610a79565b9150506103c9565b50600067ffffffffffffffff81111561048d5761048c610ac1565b5b6040519080825280602002602001820160405280156104bb5781602001602082028036833780820191505090505b50600190805190602001906104d1929190610702565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f890610b21565b60006040518083038185875af1925050503d8060008114610535576040519150601f19603f3d011682016040523d82523d6000602084013e61053a565b606091505b505090508061057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590610b82565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061060657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061064183610671565b90506000670de0b6b3a7640000858361065a9190610ba2565b6106649190610c13565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e39190610cd1565b5050509150506402540be400816106fa9190610d4c565b915050919050565b82805482825590600052602060002090810192821561077b579160200282015b8281111561077a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610722565b5b509050610788919061078c565b5090565b5b808211156107a557600081600090555060010161078d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107ee6107e96107e4846107a9565b6107c9565b6107a9565b9050919050565b6000610800826107d3565b9050919050565b6000610812826107f5565b9050919050565b61082281610807565b82525050565b600060208201905061083d6000830184610819565b92915050565b600080fd5b6000610853826107a9565b9050919050565b61086381610848565b811461086e57600080fd5b50565b6000813590506108808161085a565b92915050565b60006020828403121561089c5761089b610843565b5b60006108aa84828501610871565b91505092915050565b6000819050919050565b6108c6816108b3565b82525050565b60006020820190506108e160008301846108bd565b92915050565b6108f081610848565b82525050565b600060208201905061090b60008301846108e7565b92915050565b61091a816108b3565b811461092557600080fd5b50565b60008135905061093781610911565b92915050565b60006020828403121561095357610952610843565b5b600061096184828501610928565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109b1601b8361096a565b91506109bc8261097b565b602082019050919050565b600060208201905081810360008301526109e0816109a4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a21826108b3565b9150610a2c836108b3565b9250828201905080821115610a4457610a436109e7565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a84826108b3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ab657610ab56109e7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b0b600083610af0565b9150610b1682610afb565b600082019050919050565b6000610b2c82610afe565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b6c600b8361096a565b9150610b7782610b36565b602082019050919050565b60006020820190508181036000830152610b9b81610b5f565b9050919050565b6000610bad826108b3565b9150610bb8836108b3565b9250828202610bc6816108b3565b91508282048414831517610bdd57610bdc6109e7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1e826108b3565b9150610c29836108b3565b925082610c3957610c38610be4565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6381610c44565b8114610c6e57600080fd5b50565b600081519050610c8081610c5a565b92915050565b6000819050919050565b610c9981610c86565b8114610ca457600080fd5b50565b600081519050610cb681610c90565b92915050565b600081519050610ccb81610911565b92915050565b600080600080600060a08688031215610ced57610cec610843565b5b6000610cfb88828901610c71565b9550506020610d0c88828901610ca7565b9450506040610d1d88828901610cbc565b9350506060610d2e88828901610cbc565b9250506080610d3f88828901610c71565b9150509295509295909350565b6000610d5782610c86565b9150610d6283610c86565b9250828202610d7081610c86565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610da857610da76109e7565b5b8282058414831517610dbd57610dbc6109e7565b5b509291505056fea2646970667358221220b09ddc4fc59339da94dc5e9dccf56fe5db2b78dff3d3c7fe78135caf1257675264736f6c63430008130033",
  "devdoc": {
    "author": "Renan Mello",
    "details": "This implements pricefeeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "this implements price feeds as our "
      }
    },
    "title": "A contract for crowdfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "this function funds the contract "
      }
    },
    "notice": "This contract is to demo a semple contract ",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}